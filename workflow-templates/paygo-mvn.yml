name: Project CI

on:
  push:
    branches: [ master ]

jobs:          
  build:
    runs-on: paygo-maven
    name: Testing and Building
    env:
      MAVEN_SETTINGS_XML: ./custom-settings.xml
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        check-latest: true
        
    - name: ECR Login
      run: aws ecr get-login --region us-east-1 --no-include-email | sh -
          
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Getting custom settings.xml
      run: echo $MAVEN_SETTINGS_XML_CONTENT > $MAVEN_SETTINGS_XML
      env:
        MAVEN_SETTINGS_XML_CONTENT: ${{ secrets.MAVEN_SETTINGS_XML }}  
          
    - name: Testing
      run: mvn --settings ${MAVEN_SETTINGS_XML} clean test
   
    - name: Building and Pushing to ECR
      run: |
        CURRENT_IMAGE_REGISTRY=$(mvn --settings ${MAVEN_SETTINGS_XML} -q -Dexec.executable=echo -Dexec.args='${image.registry}' --non-recursive exec:exec)
        echo ${CURRENT_IMAGE_REGISTRY}
        if [ ${CURRENT_IMAGE_REGISTRY} != '${image.registry}' ]
        then
          echo "Docker image registry: ${CURRENT_IMAGE_REGISTRY}"
        else
          echo "Missing required tag 'image.registry' in pom.xml"
          exit 1
        fi
        CURRENT_VERSION=$(mvn --settings ${MAVEN_SETTINGS_XML} -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        CURRENT_DATE=`date '+%Y-%m-%d-%H-%M-%S'`
        FINAL_VERSION=${CURRENT_VERSION}-${CURRENT_DATE}
        mvn --settings ${MAVEN_SETTINGS_XML} versions:set -DnewVersion=${FINAL_VERSION} -DprocessAllModules
        echo ${FINAL_VERSION}
        CURRENT_VERSION=$(mvn --settings ${MAVEN_SETTINGS_XML} -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        echo ${CURRENT_VERSION}
        mvn --settings ${MAVEN_SETTINGS_XML} -DskipTests clean install
        
    - name: Storing image version
      run: |
        service_version=$(mvn --settings ${MAVEN_SETTINGS_XML} -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        echo $service_version